{"version":3,"sources":["images/resize.svg","App.js","index.js"],"names":["App","useState","text","setText","className","style","fontSize","marginLeft","cursor","onClick","window","open","height","alt","src","RedirectImage","placeholder","value","onChange","e","target","color","marginTop","replaceAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,mC,eC+C1BA,MAjCf,WAEE,MAAwBC,mBATG,oHAS3B,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAIA,UAAU,cAAd,yCAEI,uBACEC,MAAO,CAACC,SAAU,OAAQC,WAAY,OAAQC,OAAQ,WACtDC,QAVY,WAEpBC,OAAOC,KADc,kFACI,WAMnB,gCAKE,qBACEN,MAAO,CAACO,OAAQ,OAAQL,WAAY,MAAOC,OAAO,WAClDK,IAAI,GAAGC,IAAKC,UAIpB,0BAAUC,YAAY,+CAA+CZ,UAAU,eAAea,MAAOf,EAAMgB,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,UAE7I,sBAAKb,UAAU,mBAAf,UACE,oBAAIC,MAAO,CAACgB,MAAO,UAAWC,UAAW,SAAzC,yBACA,cAAC,YAAD,CAAWpB,KAAMA,EAAKqB,WAAW,MAAO,mBCnChDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bfe72709.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resize.2e4b7961.svg\";","import {\n  ParseText\n} from \"@epnsproject/frontend-sdk-staging\";\nimport RedirectImage from './images/resize.svg'\nimport {  useState } from \"react\";\nimport \"./App.css\";\n\nconst DEFAULT_PLACEHOLDERTEXT = `\nWelcome to [d: EPNS PARSER],\nYou can visit the [s: docs] to view more options available.\n\n[bi: Edit me]\t\n`;\n\nfunction App() {\n  // create state components to fetch all the notifications.\n  const [text, setText] = useState(DEFAULT_PLACEHOLDERTEXT);\n  const gotoReference = () => {\n    const referenceURL = \"https://github.com/ethereum-push-notification-service/epns-frontend-sdk-staging\";\n    window.open(referenceURL,\"_blank\");\n  }\n  return (\n    <div className=\"App\">\n      <h2 className=\"App__header\">\n          Interactive Markdown Parser. \n          <span\n            style={{fontSize: \"14px\", marginLeft: \"20px\", cursor: \"pointer\"}}\n            onClick={gotoReference}\n          >\n             View Parser options\n            <img\n              style={{height: \"15px\", marginLeft: \"5px\", cursor:\"pointer\"}}\n              alt=\"\" src={RedirectImage}\n            />\n          </span>\n      </h2>\n      <textarea placeholder=\"Please Enter in your text in markdown format\" className=\"App_textarea\" value={text} onChange={(e) => setText(e.target.value)}></textarea>\n\n      <div className=\"App__textcontent\">\n        <h3 style={{color: \"#DB1081\", marginTop: \"100px\"}} >Parsed Text</h3>\n        <ParseText text={text.replaceAll('\\\\n', \"<br />\")}/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}